import Head from 'next/head'
import { useEffect, useState } from 'react'
import { useSession, useSupabaseClient } from '@supabase/auth-helpers-react'
import { useRouter } from 'next/router'
import { GridCardList, LinkTab, ProfileDetails, TabPanel } from '../../src/components'
import { BsJournalAlbum } from 'react-icons/bs'
import { Box, Tabs } from '@mui/material'
import { GetServerSidePropsContext } from 'next'
import { createServerSupabaseClient } from '@supabase/auth-helpers-nextjs'
import Link from 'next/link'
import { useDispatch } from 'react-redux'
import { callApiStart, callApiSuccess } from '../../src/redux/slices/apiSlice'

type Profiles = Database['public']['Tables']['profiles']['Row']

type Props = {
	data: Profiles
}

export async function getServerSideProps(context: GetServerSidePropsContext) {

	// Create authenticated Supabase Client
	const supabase = createServerSupabaseClient(context)
	const bcuns_id: string | string[] | undefined = context.params?.bcuns_id

	const { data, error, status } = await supabase
		.from('profiles')
		.select()
		.eq('bcuns_id', bcuns_id)
		.single()

	return { props: { data } }
}

export default function Home(props: Props) {
	const supabase = useSupabaseClient<Database>()
	const profile: Profiles = props.data
	const session = useSession()
	const router = useRouter()
	const dispatch = useDispatch()
	// const bcuns_id: string | string[] | undefined = router.query.account

	// tablist
	const [value, setValue] = useState(0)
	const handleChange = (event: React.SyntheticEvent, newValue: number) => {
		setValue(newValue)
	}

	// console.log('router.query', router.query.account)

	const [comics, setComics] = useState<Array<
		Database['public']['Tables']['comics']['Row']
	> | null>()

	useEffect(() => {
		const func = async () => {
			dispatch(callApiStart())
			let { data: comics, error } = await supabase
				.from('comics')
				.select(`*, chapters(*)`)
				.range(0, 11)

			console.log('data: ', comics)
			console.log('error: ', error)

			setComics(comics)
			dispatch(callApiSuccess(true))
		}
		func()
	}, [])

	return (
		<>
			<Head>
				<title>{profile?.full_name} | BCuns</title>
				<meta name="description" content={`Generated by create next app`} />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="px-4 sm:px-8">
				{profile ? (
					<>
						<ProfileDetails profile={profile} />
						{/* option */}
						<Box sx={{ width: '100%' }}>
							<Box sx={{ borderBottom: 1, borderColor: 'divider' }}>
								<Tabs value={value} onChange={handleChange} aria-label="basic tabs example">
									<LinkTab label="Truyá»‡n tranh" icon={<BsJournalAlbum size={18} color="red" />} />
								</Tabs>
							</Box>
							<TabPanel value={value} index={0}>
								<GridCardList list={comics} />
							</TabPanel>
						</Box>
					</>
				) : (
					<>
						<div className="h-screen w-full flex items-center justify-center">
							<h1 className="text-2xl font-medium pr-2 py-2 border-r-2">404</h1>
							<p className="px-2">
								This <b>bcuns id</b> could not be found.
							</p>
							<Link href={'/'}>
								<u className="text-red-500 hover:text-red-600">Go Home</u>
							</Link>
						</div>
					</>
				)}
			</main>
		</>
	)
}
